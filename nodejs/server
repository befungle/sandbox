#!/usr/bin/env node

var kinect = require('./addons/kinect/addon');
var png = require('./addons/png/png').Png;
var io = require('socket.io').listen(8080, { log: false });

io.sockets.on('connection', function (socket) {
  console.log( "STATUS: Connected" )
	var framerate = 20;
  var connected = true;

  kinect.setDepthRangeFilter( 200, 255 );
  
  socket.on('disconnect', function () {
    console.log( "STATUS: Disconnected" )
    kinect.shutdown();
    connected = false;
  });

  socket.on('depthfilter', function ( option ) {
    kinect.setDepthRangeFilter( option.min, option.max );

    console.log( "REQ: setDepthRangeFilter( %d, %d )", option.min, option.max )
  });


  socket.on('framerate', function ( value ) {
    framerate = value;

    console.log( "REQ: change FPS to %d", value );
  });

  function writeImage(rgb) {
    var pngData = new png(rgb, 640, 480, 'rgb');
    // var png_image = pngData.encodeSync().toString('binary');
    var png_image = "data:image/png;base64," + pngData.encodeSync().toString('base64');
    socket.emit('depthframe', { data: png_image });
  }

  function capture() {
    kinect.captureDepth( writeImage );
    if ( connected )
      setTimeout( capture, 1000 / framerate );
  }

  capture();
});

